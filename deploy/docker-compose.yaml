version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_db}

    container_name: retail_db
    restart: always
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d {POSTGRES_db}
      interval: 5s
      timeout: 3s
      retries: 10
    volumes:
      - my_todolist2:/var/lib/postgresql/data/

  run_migrations:
    image: ${DOCKERHUB_USER}/my_todolist2:latest
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    command: python manage.py migrate

  api:
      image: ${DOCKERHUB_USER}/my_todolist2:latest
      env_file: .env
      depends_on:
        db:
          condition: service_healthy
        run_migrations:
          condition: service_healthy


  collect_static:
    image: ${DOCKERHUB_USER}/my_todolist2:latest
    env_file: .env
    command: python manage.py collectstatic -c --no-input
    volumes:
    - django-static:/opt/app/static/

  frontend:
    image: sermalenk/skypro-front:lesson-35
    restart: on-failure
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_started
      collect_static:
        condition: service_healthy

    volumes:
      - ./deploy/nginx.conf:/etc/nginx/conf/d/default.conf
      - django-static:/usr/share/nginx/html/static/

volumes:
  my_todolist2:
  django-static:
